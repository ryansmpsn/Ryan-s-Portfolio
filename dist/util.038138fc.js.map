{"version":3,"sources":["js/util.js"],"names":["PI","Math","cos","sin","abs","sqrt","pow","round","random","atan2","HALF_PI","TAU","TO_RAD","floor","n","rand","randIn","min","max","randRange","fadeIn","t","m","fadeOut","fadeInOut","hm","dist","x1","y1","x2","y2","angle","lerp","n1","n2","speed"],"mappings":"IAAQA,KAAuDC,KAAvDD;IAAIE,MAAmDD,KAAnDC;IAAKC,MAA8CF,KAA9CE;IAAKC,MAAyCH,KAAzCG;IAAKC,OAAoCJ,KAApCI;IAAMC,MAA8BL,KAA9BK;IAAKC,QAAyBN,KAAzBM;IAAOC,SAAkBP,KAAlBO;IAAQC,QAAUR,KAAVQ;AACrD,IAAMC,OAAO,GAAG,MAAMV,EAAtB;AACA,IAAMW,GAAG,GAAG,IAAIX,EAAhB;AACA,IAAMY,MAAM,GAAGZ,EAAE,GAAG,GAApB;;AACA,IAAMa,KAAK,GAAG,SAARA,KAAQ,CAAAC,CAAC;AAAA,SAAIA,CAAC,GAAG,CAAR;AAAA,CAAf;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAD,CAAC;AAAA,SAAIA,CAAC,GAAGN,MAAM,EAAd;AAAA,CAAd;;AACA,IAAMQ,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN;AAAA,SAAcH,IAAI,CAACG,GAAG,GAAGD,GAAP,CAAJ,GAAkBA,GAAhC;AAAA,CAAf;;AACA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAAAL,CAAC;AAAA,SAAIA,CAAC,GAAGC,IAAI,CAAC,IAAID,CAAL,CAAZ;AAAA,CAAnB;;AACA,IAAMM,MAAM,GAAG,SAATA,MAAS,CAACC,CAAD,EAAIC,CAAJ;AAAA,SAAUD,CAAC,GAAGC,CAAd;AAAA,CAAf;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACF,CAAD,EAAIC,CAAJ;AAAA,SAAU,CAACA,CAAC,GAAGD,CAAL,IAAUC,CAApB;AAAA,CAAhB;;AACA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACH,CAAD,EAAIC,CAAJ,EAAU;AAC3B,MAAIG,EAAE,GAAG,MAAMH,CAAf;AACA,SAAOlB,GAAG,CAAC,CAACiB,CAAC,GAAGI,EAAL,IAAWH,CAAX,GAAeG,EAAhB,CAAH,GAA0BA,EAAjC;AACA,CAHD;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb;AAAA,SAAoBzB,IAAI,CAACC,GAAG,CAACuB,EAAE,GAAGF,EAAN,EAAU,CAAV,CAAH,GAAkBrB,GAAG,CAACwB,EAAE,GAAGF,EAAN,EAAU,CAAV,CAAtB,CAAxB;AAAA,CAAb;;AACA,IAAMG,KAAK,GAAG,SAARA,KAAQ,CAACJ,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb;AAAA,SAAoBrB,KAAK,CAACqB,EAAE,GAAGF,EAAN,EAAUC,EAAE,GAAGF,EAAf,CAAzB;AAAA,CAAd;;AACA,IAAMK,IAAI,GAAG,SAAPA,IAAO,CAACC,EAAD,EAAKC,EAAL,EAASC,KAAT;AAAA,SAAmB,CAAC,IAAIA,KAAL,IAAcF,EAAd,GAAmBE,KAAK,GAAGD,EAA9C;AAAA,CAAb","file":"util.038138fc.js","sourceRoot":"..","sourcesContent":["const { PI, cos, sin, abs, sqrt, pow, round, random, atan2 } = Math;\r\nconst HALF_PI = 0.5 * PI;\r\nconst TAU = 2 * PI;\r\nconst TO_RAD = PI / 180;\r\nconst floor = n => n | 0;\r\nconst rand = n => n * random();\r\nconst randIn = (min, max) => rand(max - min) + min;\r\nconst randRange = n => n - rand(2 * n);\r\nconst fadeIn = (t, m) => t / m;\r\nconst fadeOut = (t, m) => (m - t) / m;\r\nconst fadeInOut = (t, m) => {\r\n\tlet hm = 0.5 * m;\r\n\treturn abs((t + hm) % m - hm) / (hm);\r\n};\r\nconst dist = (x1, y1, x2, y2) => sqrt(pow(x2 - x1, 2) + pow(y2 - y1, 2));\r\nconst angle = (x1, y1, x2, y2) => atan2(y2 - y1, x2 - x1);\r\nconst lerp = (n1, n2, speed) => (1 - speed) * n1 + speed * n2;"]}